name: CI

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Set up cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          venv-${{ runner.os }}-${{ matrix.python-version }}-
    
    - name: Install dependencies
      run: |
        uv sync --frozen
    
    - name: Run ruff format check
      run: |
        uv run ruff format --check src tests config
    
    - name: Run ruff linter
      run: |
        uv run ruff check src tests config
    
    - name: Run type checking with mypy
      run: |
        uv run mypy src tests --ignore-missing-imports
      continue-on-error: true  # 暂时允许类型检查失败，后续完善
    
    - name: Run tests with pytest
      run: |
        uv run pytest tests -v --cov=src --cov-report=xml --cov-report=term
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false  # 上传失败不影响CI